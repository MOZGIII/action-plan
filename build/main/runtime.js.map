{"version":3,"file":"runtime.js","sourceRoot":"","sources":["../../src/main/runtime.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AAQxB,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,EAC3B,MAAsB,EACC,EAAE;IACzB,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;IAElC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IAEvD,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC;IAE7C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IAEnC,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,IAAI,GAAG,CAAC,CAAC;KAClD;IAED,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;QAChC,MAAM,IAAI,KAAK,CACb,cAAc,IAAI,kCAAkC,OAAO,MAAM,GAAG,CACrE,CAAC;KACH;IAED,OAAO,MAAM,MAAM,EAAE,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import path from \"path\";\nimport { Matrix } from \"../common/types.js\";\n\nexport type EvalPlanParams = {\n  planFile: string;\n  plan: string;\n};\n\nexport const evalPlan = async (\n  params: EvalPlanParams,\n): Promise<Matrix | any> => {\n  const { planFile, plan } = params;\n\n  const rootFile = path.resolve(process.cwd(), planFile);\n\n  const moduleExports = await import(rootFile);\n\n  const planFn = moduleExports[plan];\n\n  if (planFn === undefined) {\n    throw new Error(`Unable to find plan \"${plan}\"`);\n  }\n\n  if (typeof planFn !== \"function\") {\n    throw new Error(\n      `Found plan ${plan} but it is not a function (was ${typeof planFn})`,\n    );\n  }\n\n  return await planFn();\n};\n"]}